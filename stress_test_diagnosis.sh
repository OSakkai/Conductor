#!/bin/bash

# ===============================================
# DIAGN√ìSTICO SIMPLIFICADO - PROBLEMA SINGLE_USE
# Usando credenciais: devargon/123
# ===============================================

echo "üîç DIAGN√ìSTICO DO PROBLEMA SINGLE_USE"
echo "====================================="

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
log_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
log_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
log_error() { echo -e "${RED}‚ùå $1${NC}"; }

# ===============================================
# AUTENTICA√á√ÉO COM CREDENCIAIS CORRETAS
# ===============================================

log_info "Obtendo token com devargon/123..."
TOKEN_RESPONSE=$(curl -s -X POST http://localhost:3000/api/auth/login \
  -H "Content-Type: application/json" \
  -d '{"nome_usuario":"devargon","senha":"123"}')

# Verificar ambos os formatos de token
TOKEN=$(echo $TOKEN_RESPONSE | grep -o '"access_token":"[^"]*' | cut -d'"' -f4)
if [ -z "$TOKEN" ]; then
    TOKEN=$(echo $TOKEN_RESPONSE | grep -o '"token":"[^"]*' | cut -d'"' -f4)
fi

if [ -z "$TOKEN" ]; then
    log_error "Falha ao extrair token. Resposta completa:"
    echo "$TOKEN_RESPONSE"
    exit 1
fi

log_success "Token obtido com sucesso: ${TOKEN:0:20}..."

# ===============================================
# TESTE CONTROLADO: SINGLE_USE BEHAVIOR
# ===============================================

TIMESTAMP=$(date +%s)
SINGLE_KEY="DIAG-SINGLE-$TIMESTAMP"

echo ""
log_info "FASE 1: CRIANDO CHAVE SINGLE_USE PARA TESTE"
echo "==========================================="

# 1. Criar chave single_use
log_info "1.1 - Criando chave single_use: $SINGLE_KEY"
CREATE_RESPONSE=$(curl -s -X POST http://localhost:3000/api/chaves \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $TOKEN" \
  -d "{
    \"chave\": \"$SINGLE_KEY\",
    \"tipo\": \"single_use\",
    \"permissao\": \"Operador\",
    \"descricao\": \"Teste diagn√≥stico\"
  }")

echo "Resposta da cria√ß√£o: $CREATE_RESPONSE"

# 2. Estado inicial no banco
log_info "1.2 - Estado inicial da chave:"
docker exec lab-mysql mysql -u lab_user -plab_password123 lab_sistema -e "
SELECT chave, tipo, usos_atual, usos_maximo, status, data_criacao 
FROM chaves_acesso 
WHERE chave = '$SINGLE_KEY';"

echo ""
log_info "FASE 2: TESTANDO COMPORTAMENTO DE VALIDA√á√ÉO"
echo "==========================================="

# 3. Primeira valida√ß√£o
log_info "2.1 - VALIDA√á√ÉO: Testando chave single_use..."
VALIDATE_RESPONSE=$(curl -s -X POST http://localhost:3000/api/chaves/validate \
  -H "Content-Type: application/json" \
  -d "{\"chave\": \"$SINGLE_KEY\"}")

echo "Resposta da valida√ß√£o: $VALIDATE_RESPONSE"

# 4. Estado ap√≥s valida√ß√£o (AQUI √â O PROBLEMA!)
log_info "2.2 - Estado AP√ìS valida√ß√£o (verificar se usos_atual mudou):"
docker exec lab-mysql mysql -u lab_user -plab_password123 lab_sistema -e "
SELECT chave, tipo, usos_atual, usos_maximo, status 
FROM chaves_acesso 
WHERE chave = '$SINGLE_KEY';"

echo ""
log_info "FASE 3: TESTANDO REGISTRO AP√ìS VALIDA√á√ÉO"
echo "========================================"

# 5. Tentar registrar usu√°rio
log_info "3.1 - REGISTRO: Tentando criar usu√°rio com a chave..."
REGISTER_RESPONSE=$(curl -s -X POST http://localhost:3000/api/auth/register \
  -H "Content-Type: application/json" \
  -d "{
    \"nome_usuario\": \"diag_user_$TIMESTAMP\",
    \"funcao\": \"Coordenador\",
    \"email\": \"diag$TIMESTAMP@test.com\",
    \"senha\": \"123456\",
    \"chave_acesso\": \"$SINGLE_KEY\"
  }")

echo "Resposta do registro: $REGISTER_RESPONSE"

# 6. Estado final
log_info "3.2 - Estado FINAL da chave:"
docker exec lab-mysql mysql -u lab_user -plab_password123 lab_sistema -e "
SELECT chave, tipo, usos_atual, usos_maximo, status 
FROM chaves_acesso 
WHERE chave = '$SINGLE_KEY';"

# 7. Verificar se usu√°rio foi criado
log_info "3.3 - Verificar se usu√°rio foi criado:"
docker exec lab-mysql mysql -u lab_user -plab_password123 lab_sistema -e "
SELECT nome_usuario, permissao, funcao, data_criacao 
FROM usuarios 
WHERE nome_usuario = 'diag_user_$TIMESTAMP';"

echo ""
log_info "FASE 4: TESTE COMPARATIVO - REGISTRO SEM VALIDA√á√ÉO PR√âVIA"
echo "========================================================"

# 8. Criar segunda chave para teste comparativo
SINGLE_KEY2="DIAG-DIRECT-$TIMESTAMP"

log_info "4.1 - Criando segunda chave para teste direto:"
CREATE_RESPONSE2=$(curl -s -X POST http://localhost:3000/api/chaves \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $TOKEN" \
  -d "{
    \"chave\": \"$SINGLE_KEY2\",
    \"tipo\": \"single_use\",
    \"permissao\": \"Operador\",
    \"descricao\": \"Teste direto sem valida√ß√£o\"
  }")

echo "Segunda chave criada: $CREATE_RESPONSE2"

# 9. Registro direto sem valida√ß√£o pr√©via
log_info "4.2 - REGISTRO DIRETO (sem valida√ß√£o pr√©via):"
DIRECT_REGISTER=$(curl -s -X POST http://localhost:3000/api/auth/register \
  -H "Content-Type: application/json" \
  -d "{
    \"nome_usuario\": \"direct_user_$TIMESTAMP\",
    \"funcao\": \"Coordenador\",
    \"email\": \"direct$TIMESTAMP@test.com\",
    \"senha\": \"123456\",
    \"chave_acesso\": \"$SINGLE_KEY2\"
  }")

echo "Registro direto: $DIRECT_REGISTER"

# 10. Estado da segunda chave
log_info "4.3 - Estado da segunda chave ap√≥s registro direto:"
docker exec lab-mysql mysql -u lab_user -plab_password123 lab_sistema -e "
SELECT chave, tipo, usos_atual, usos_maximo, status 
FROM chaves_acesso 
WHERE chave = '$SINGLE_KEY2';"

# 11. Verificar usu√°rio criado diretamente
log_info "4.4 - Usu√°rio criado diretamente:"
docker exec lab-mysql mysql -u lab_user -plab_password123 lab_sistema -e "
SELECT nome_usuario, permissao, funcao, data_criacao 
FROM usuarios 
WHERE nome_usuario = 'direct_user_$TIMESTAMP';"

echo ""
log_info "FASE 5: LOGS DO BACKEND"
echo "======================"

log_info "5.1 - Logs recentes do backend (√∫ltimas 30 linhas):"
docker logs lab-backend --tail=30

echo ""
echo "üîç DIAGN√ìSTICO CONCLU√çDO"
echo "========================"
log_warning "AN√ÅLISE DOS RESULTADOS:"
echo "1. ‚úÖ Se usos_atual = 0 ap√≥s valida√ß√£o ‚Üí Valida√ß√£o N√ÉO consome"
echo "2. ‚ùå Se usos_atual = 1 ap√≥s valida√ß√£o ‚Üí Valida√ß√£o CONSOME (PROBLEMA!)"
echo "3. üîÑ Comparar comportamento entre 'valida√ß√£o+registro' vs 'registro direto'"
echo "4. üìä Se registro direto funciona mas valida√ß√£o+registro falha = problema na valida√ß√£o"
echo ""
log_info "üìã PR√ìXIMOS PASSOS:"
echo "- Se problema confirmado: corrigir validateKey() no ChavesService"
echo "- Separar l√≥gica de valida√ß√£o da l√≥gica de consumo"
echo "- Re-executar teste de estresse"