import { Module, forwardRef } from '@nestjs/common';
import { JwtModule } from '@nestjs/jwt';
import { PassportModule } from '@nestjs/passport';
// ‚úÖ CORRE√á√ÉO: Removido ThrottlerModule - depend√™ncia n√£o verificada

// Controllers e Services
import { AuthController } from './auth.controller';
import { AuthService } from './auth.service';
import { JwtStrategy } from './jwt.strategy';

// M√≥dulos necess√°rios
import { UsersModule } from '../users/users.module';
import { ChavesModule } from '../chaves/chaves.module';

@Module({
  imports: [
    // üîß CONFIGURA√á√ÉO DO PASSPORT
    PassportModule.register({ defaultStrategy: 'jwt' }),
    
    // ‚úÖ CORRE√á√ÉO: Rate limiting removido at√© depend√™ncia ser instalada
    // Para implementar: npm install @nestjs/throttler
    
    // üîß CONFIGURA√á√ÉO JWT (local - sobrescreve a global se necess√°rio)
    JwtModule.register({
      secret: process.env.JWT_SECRET || 'conductor-secret-key-2025',
      signOptions: { 
        expiresIn: process.env.JWT_EXPIRES_IN || '24h' 
      },
    }),

    // üìã DEPEND√äNCIAS DE OUTROS M√ìDULOS COM forwardRef
    forwardRef(() => UsersModule),    // Para acessar UsersService
    forwardRef(() => ChavesModule),   // Para acessar ChavesService no registro
  ],

  controllers: [AuthController],
  
  providers: [
    AuthService,    // Servi√ßo principal de autentica√ß√£o
    JwtStrategy,    // Estrat√©gia JWT para Passport
    
    // ‚úÖ CORRE√á√ÉO: Throttler Guard removido at√© depend√™ncia ser instalada
  ],
  
  exports: [
    AuthService,    // Exportar para outros m√≥dulos que precisem
    JwtModule,      // Exportar JwtModule para reutiliza√ß√£o
    JwtStrategy,    // Exportar strategy se necess√°rio
  ],
})
export class AuthModule {
  constructor() {
    console.log('üîê AuthModule inicializado com:');
    console.log('   ‚úÖ Integra√ß√£o de chaves de acesso');
    console.log('   ‚ö†Ô∏è Rate limiting: instalar @nestjs/throttler para ativar');
    console.log('   ‚úÖ JWT com refresh token');
    console.log('   ‚úÖ Logout com invalida√ß√£o de token');
    console.log('   ‚úÖ Valida√ß√£o de token robusta');
  }
}